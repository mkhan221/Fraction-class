Script started on Mon 04 Sep 2023 05:16:55 PM CDT
]0;py9242yg@csci4:~/t1/t2[?1034h[py9242yg@csci4 t2]$ cat newfraction1.h
#ifndef NEWFRACTION1_H
#define NEWFRACTION1_H



class fraction
{
 private:
  /**numerator of the fraction*/
  int num;
  /**denominator of the fraction*/
  int denom;
 public:
  /**Constructor;
   *@pre none
   *@post initializes the value of the num and denom*/
  fraction();
  /**Constructor;
   *@param int x the numerator of the fraction
   *@param int y the denominator of the fraction
   *@pre none
   *@post takes user input values of x and y*/
  fraction(int x, int y);
  /**Member function*/
  /** Sets the numerator
  /*@param int x the value of the numerator
  /*@pre none
  /*@post the numerator has been set to a particular value*/
  void setNum(int x);
  /**Member function*/
  /** Sets the denominator*/
  /*@param int y the values of the denominator
  /*@pre none
  /*@post the denominator has been set to a particular value*/
  void setDenom(int y);
  /**Member function*/
  /**returns the numerator*/
  /*@pre none
  /*@post the value returned is the numerator*/
  int getNum();
  /**Member function*/
  /**returns the denominator*/
  /*@pre none
  /*@post the value returned is the denominator*/
  int getDenom();
  /**Member function*/
  /**Displays a fraction*/
  /*@pre none
  /*@post displays a fraction*/
  void display();
    
    

};
/**non-member function*/
/**Adds two fraction*/
/*@param fraction x which is one of the fraction
/*@param fraction y which the other fraction
/*@pre none
/*@post adds the two fraction and returns a fraction*/
fraction Add( fraction x, fraction y);
/**non-member function*/
/**Subtracts two fraction*/
/*@param fraction x which is one of the fraction
/*@param fraction y which the other fraction
/*@pre none
/*@post Subtracts the two fraction and returns a fraction*/
fraction Sub( fraction x, fraction y);
/**non-member function*/
/**Multiplys two fraction*/
/*@param fraction x which is one of the fraction
/*@param fraction y which the other fraction
/*@pre none
/*@post Multiplys the two fraction and returns a fraction*/
fraction Mul( fraction x, fraction y);
/**non-member function*/
/**Divides two fraction*/
/*@param fraction x which is one of the fraction
/*@param fraction y which the other fraction
/*@pre none
/*@post Divides the two fraction and returns a fraction*/
fraction Div( fraction x, fraction y);
  

#endif
]0;py9242yg@csci4:~/t1/t2[py9242yg@csci4 t2]$ cat newfraction1.cpp
/** file:fraction.cpp*/
/** Class IMPLEMENTED: fraction (See newfraction1.h for documentation.)*/
#include "newfraction1.h"
#include <iostream>
using namespace std;

fraction::fraction()
{
  num=0;  //constructor initializes value of the fraction if not given by the user
  denom=1;
}
fraction::fraction(int x, int y)
{
  num=x;  //constructor takes fraction  value from the user
  denom=y;
}
void fraction::setNum(int x)
{
  num=x; //sets the numerator
}
void fraction::setDenom(int y)
{ if (denom !=0)
    {
      denom=y; //sets the denominator
    }
  else
    {
      cout<<"Denominator cannot be zero."<<endl;
    }
}
int fraction::getNum()
{
  return num; //returns the numerator
}
int fraction::getDenom()
{
  return denom; //returns the denominator
}
void fraction::display()
{
  cout<<num<<"/"<<denom; //displays the fraction
}

fraction Add(fraction x,fraction y)
{
  int numerator,denominator;
  numerator=(x.getNum()*y.getDenom())+(y.getNum()*x.getDenom()); //addition functiom
  denominator=x.getDenom()*y.getDenom();
  fraction temp(numerator,denominator);
  return temp;
    
}
fraction Sub(fraction x, fraction y)
{
  int numerator,denominator;
  numerator = (x.getNum()*y.getDenom())-(y.getNum()*x.getDenom()); //subtraction functiom
  denominator = x.getDenom()*y.getDenom();
  fraction temp(numerator,denominator);
  return temp;
}
fraction Mul(fraction x, fraction y)
{
  int numerator,denominator;
  numerator = (x.getNum()*y.getNum());  //multiplication functiom
  denominator = x.getDenom()*y.getDenom();
  fraction temp(numerator,denominator);
  return temp;
}
fraction Div(fraction x, fraction y)
{
  int numerator,denominator;
  numerator = (x.getNum()*y.getDenom());  //Division function
  denominator = x.getDenom()*y.getNum();
  fraction temp(numerator,denominator);
  return temp;

}
]0;py9242yg@csci4:~/t1/t2[py9242yg@csci4 t2]$ cat n[Kproject1_task2.cpp
/*This program demonstrates a fraction class which performs different arithmetic calculations
  on two fractions*/
/*Mohammad Aryan Khan
py9242yg
09/05/2023
Instructor:Jie Meichsner
*/
#include "newfraction1.h"
#include<iostream>
using namespace std;
int main()
{
  int x,y;
  cout<<"Enter the first fraction: numerator and denominator\n";
  cin>>x>>y;
  fraction f1(x,y);
  fraction f2;
  cout<<"Enter the second fraction: numerator and denominator\n";
  cin>>x>>y;
  f2.setNum(x);
  f2.setDenom(y);
  cout<<"The two fractions entered are:\n";
  cout<<"f1="; 
  f1.display();
  cout<<"\nf2=";
  cout<<f2.getNum()<<"/"<<f2.getDenom()<<"\n";
 
  cout<<"\nThe arithmetic operations on these two fractions:\n";
  cout<<"f1 + f2 = ";Add(f1,f2).display();
  cout<<"\nf1 - f2 = ";Sub(f1,f2).display();
  cout<<"\nf1 * f2 = ";Mul(f1,f2).display();
  cout<<"\nf1 / f2 = ";Div(f1,f2).display();
}


]0;py9242yg@csci4:~/t1/t2[py9242yg@csci4 t2]$ cat project1_task2.cpp[2Pnewfraction1.cpp[2Ph./project1_task1.exeg++ -o project1_task1.exe project1_task1.cpp fraction.cpp[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[35Pcat project1_task1.cppg++ -o project1_task1.exe project1_task1.cpp fraction.cpp[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kg++ -o por[K[Kroject1_task2.exe project1_task2.cpp newfraction1.c pp
]0;py9242yg@csci4:~/t1/t2[py9242yg@csci4 t2]$ ./project1_task1.c[Kexe
bash: ./project1_task1.exe: No such file or directory
]0;py9242yg@csci4:~/t1/t2[py9242yg@csci4 t2]$ 
]0;py9242yg@csci4:~/t1/t2[py9242yg@csci4 t2]$ ./project1_task2.exe
Enter the first fraction: numerator and denominator
3 5
Enter the second fraction: numerator and denominator
2 3
The two fractions entered are:
f1=3/5
f2=2/3

The arithmetic operations on these two fractions:
f1 + f2 = 19/15
f1 - f2 = -1/15
f1 * f2 = 6/15
f1 / f2 = 9/10]0;py9242yg@csci4:~/t1/t2[py9242yg@csci4 t2]$ ./project1_task2.exe
Enter the first fraction: numerator and denominator
3 4
Enter the second fraction: numerator and denominator
6 7
The two fractions entered are:
f1=3/4
f2=6/7

The arithmetic operations on these two fractions:
f1 + f2 = 45/28
f1 - f2 = -3/28
f1 * f2 = 18/28
f1 / f2 = 21/24]0;py9242yg@csci4:~/t1/t2[py9242yg@csci4 t2]$ exit

Script done on Mon 04 Sep 2023 05:19:13 PM CDT
